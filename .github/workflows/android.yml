name: Android Build

on:
  push:
    branches:
      - main  # Cambia 'main' por la rama en la que trabajas si es diferente
  pull_request:
    branches:
      - main  # Cambia 'main' por la rama en la que trabajas si es diferente

jobs:
  build:
    runs-on: ubuntu-latest  # Usamos la última versión de Ubuntu como entorno de ejecución
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3  # Clona el repositorio
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'  # Android requiere Java 11
    
    - name: Install Android SDK
      run: |
        # Instalar las dependencias necesarias para Android
        sudo apt update
        sudo apt install -y wget tar unzip
        
        # Descargar e instalar la última versión de las herramientas de línea de comandos del SDK
        wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip?hl=es-419 -O commandlinetools-linux.zip
        mkdir -p $HOME/Android/cmdline-tools
        unzip commandlinetools-linux.zip -d $HOME/Android/cmdline-tools
        rm commandlinetools-linux.zip

        # Establecer las variables de entorno
        echo "export ANDROID_HOME=$HOME/Android" >> $GITHUB_ENV
        echo "export PATH=$PATH:$ANDROID_HOME/cmdline-tools/bin" >> $GITHUB_ENV

        # Instalar las herramientas del SDK necesarias (puedes agregar más si las necesitas)
        yes | sdkmanager --sdk_root=$ANDROID_HOME --update
        yes | sdkmanager --sdk_root=$ANDROID_HOME "platform-tools" "platforms;android-30" "build-tools;30.0.3"
        
    - name: Build Release APK
      run: ./gradlew assembleRelease  # Para compilar el APK de release, puedes cambiar a assembleDebug si necesitas el APK de debug

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: apk
        path: app/build/outputs/apk/release/app-release.apk  # Cambia según la ruta de salida de tu APK
